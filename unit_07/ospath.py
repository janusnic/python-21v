# Модуль os
import os
# Константа
# os.curdir Текущий каталог
print(os.curdir)
# os.pardir Родительский каталог
print(os.pardir)
# os.sep Разделитель элементов пути
print(os.sep)
# os.altsep Другой разделитель элементов пути
print(os.altsep)
# os.pathsep Разделитель путей в списке путей
print(os.pathsep)
# os.defpath Список путей по умолчанию
print(os.defpath)
# os.linesep Признак окончания строки
print(os.linesep)

# получить переменную окружения PATH
PATH = os.environ['PATH']

print(PATH)

# группа функций посвящена работе с файлами и каталогами

# getcwd() Текущий рабочий каталог.

print(os.getcwd())

# access(path,flags) Проверка доступности файла или каталога с именем path. Режим
# запрашиваемого доступа указывается значением flags, составленных
# комбинацией (побитовым ИЛИ) флагов os.F_OK (файл существует),
# os.R_OK (из файла можно читать), os.W_OK (в файл можно писать) и
# os.X_OK (файл можно исполнять, каталог можно просматривать).

path = os.getcwd()

flags = os.F_OK
print(os.access(path,flags))

# chdir(path) Делает path текущим рабочим каталогом.

# listdir(dir) Возвращает список файлов в каталоге dir. В список не входят
# специальные значения "." и "..".

print(os.listdir(path))

# mkdir(path[,mode]) Создает каталог path. По умолчанию режим mode равен 0777, то есть:
# S_IRWXU|S_IRWXG|S_IRWXO, если пользоваться константами модуля  stat.
# makedirs(path[,mode]) Аналог mkdir(), создающий все необходимые каталоги, если они не
# существуют. Возбуждает исключение, когда последний каталог уже существует.

# os.mkdir('test')

print(os.listdir(path))

# chmod(path, mode) Устанавливает режим доступа к path в значение mode. Режим доступа
# можно получить, скомбинировав флаги. Следует заметить,
# что chmod() не дополняет действующий режим, а устанавливает его заново.
path_test = 'test'
mode = 0o777
os.chmod(path_test, mode)

# rmdir(path) Удаляет пустой каталог path.
os.rmdir(path_test)
print(os.listdir(path))

# remove(path),unlink(path) Удаляет файл path. Для удаления каталогов используются rmdir() и
# removedirs().

# removedirs(path) Удаляет path до первого непустого каталога. В случае если самый
# последний вложенный подкаталог в указанном пути - не пустой,
# возбуждается исключение OSError.

# rename(src, dst) Переименовывает файл или каталог src в dst.
# renames(src, dst) Аналог rename(), создающий все необходимые каталоги для пути dst
# и удаляющий пустые каталоги пути src.

# utime(path,times) Устанавливает значения времен последней модификации (mtime) и
# доступа к файлу (atime). Если times равен None, в качестве времен
# берется текущее время. В других случаях times рассматривается как
# двухэлементный кортеж (atime, mtime). Для получения atime и mtime
# некоторого файла можно использовать stat() совместно с
# константами модуля stat.

# stat(path) Возвращает информацию о path в виде не менее чем
# десятиэлементного кортежа. Для доступа к элементам кортежа можно
# использовать константы из модуля stat, например stat.ST_MTIME
# (время последней модификации файла).

